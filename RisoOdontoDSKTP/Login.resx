<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAEEAQQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0WiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKUKT0BP0FACUU7Y/wDcb8qb0oAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiir+n6ZJetuOUiHVvX6UAU4oZJ3CRoWY9hWxbeH2PNxJj/ZT/Gt
        m3torWPZEgUd/U1NQBUi0y0hHywqT6tzVlUVRhVA+gp1FACYBqN7eGUfPEjfVRUtFAGZPolpLkoDE3+y
        ePyrIu9IubYFwBIg7r1H4V1VFAHC0V09/pEd0DJEAkv6N9a5uWJ4ZDHIpVh1BoAZRRRQAUUUUAFFFFAB
        RRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU+KNppVjQZZjgUAW9M083s2WyIl+8fX2rqkRY0CIA
        FAwAKitbdLW3WJOijk+pqegAooooAKKKKACiiigAooooAKoajp63sPAAlX7p/pV+igDhnRkdkYEMpwQa
        St3XbLgXSD2f+hrCoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK2tAtt0r3BHC/K
        v1rFrrNJh8rTYhjlhuP40AXqKKKACiiigAooooAKKKKACiiigAooooAZLGssTxt91hg1xc0RhmeJuqki
        u3rmNdi8u/3gcSKD+PSgDMooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigArtoV2QRr6K
        B+lcT3ruEOUU+oFADqKKKACiiigAooooAKKKKACiiigAooooAKwvES8QP9RW7WJ4iP7qAf7RoAwKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK7Kyk82yhf1QVxtdHoM++0aInmNuPoaANeiii
        gAooooAKKKKACiiigAooooAKKKKACue8QyZnhj/uqSfx/wD1V0NchqM/2i/lcHgHA+goAqUUUUAFFFFA
        BRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAVc0y6FpeKzH5G+VvpVOigDuQcjIpax9F1ASxi2kPzq
        PlJ7itigAooooAKKKKACiiigAooooAKKKa7rGjO5AUDJJoAp6pdi1s2wfnf5Vrk6t6heNe3Jfoi8KPaq
        lABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAqO0bh0JDA5BFdNpuqpdqI5CF
        mH5N9K5ilBIIIOCKAO5orJ0u6vZFCzQsydpDwf8A69a1ABRRRQAUUUUAFFFRyu6Rlo4zIw6KDjNACvIs
        SF3YKo6k1zWp6m143lx5WEH/AL6qLULq7nl23CtGB0TGAP8AGqVABRRRQAUUUUAFFFFABRRRQAUUUUAF
        FFFABRRRQAUUUUAFFFFABRRRQAUUAEnAFbmnaL0luh7iP/GgDPs9NnvDlRtj7uen/wBet+00q2tcHb5j
        /wB5qvABVAAAA6AUtABRRRQAUUUUAFFFFABRRRQBHLDHOmyVFdfQisW80HGXtWz/ALDf0Nb1FAHDujxu
        UdSrDqCKbXYXljDepiQYYdGHUVzF5ZS2Uu2QZU/dYdDQBWooooAKKKKACiiigAooooAKKKKACiiigAoo
        ooAKKKKACgZJwBkmit7RtN2gXUw5P3FPb3oAl0vShAonnGZTyAf4f/r1r0UUAFFFFABRRRQAUUUUAFFF
        FABRRRQAUUUUAFRTwR3MRjlXKn9KlooA5C/sHspsHmM/db1qpXaXFvHdQtFIMqf0PrXJXdq9pcNE/bof
        UUAQUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUU5EaSRUUZZjgCgC9pNj9ruNzj90nJ9z6V1IAA4qCyt
        VtLVYh1A+Y+pqxQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABVHU7IXluQB+9XlT/Sr1FA
        HDEFSQRgjgikrX1yz8qYXCD5H+97GsigAooooAKKKKACiiigAooooAKKKKACtjQbUSTNcMOE4X61j9a7
        Cwt/s1lHH/FjLfU0AWqKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAILq3W6tni
        b+IcexrjXUo7IwwynBrua5nXLfyr3zQPllGfx70AZdFFFABRRRQAUUUUAFFFFABRRRQBb02Dz7+JCOAd
        x+grr6wPD0WXmmI6AKK36ACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigArN1u
        DzbBnA5jO78O9aVMljEsLxnoykUAcRRSspVmU9QcUlABRRRQAUUUUAFFFFABRRRQB0+hx7NODd3Yn+la
        dVNNXZp0A/2Afzq3QAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAHH6l
        H5Wozr23Z/Pmqtaeupt1En+8gNZlABRRRQAUUUUAFFFFABRRRQB2lrxaQj/YH8qmoooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigDnPEI/0uI/7H9ayKKKACiiigAooooA/9k=
</value>
  </data>
</root>